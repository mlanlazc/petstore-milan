// This file was generated by liblab | https://liblab.com/

package io.github.mlanlazc.services;

import static io.github.mlanlazc.hooks.model.Request.toHookRequest;
import static io.github.mlanlazc.hooks.model.Request.toOkHttpRequest;
import static io.github.mlanlazc.hooks.model.Response.toHookResponse;

import io.github.mlanlazc.Configuration;
import io.github.mlanlazc.exceptions.ApiException;
import io.github.mlanlazc.hooks.CustomHook;
import io.github.mlanlazc.http.ModelConverter;
import io.github.mlanlazc.models.*;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import okhttp3.Headers;
import okhttp3.HttpUrl;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class BaseService {

  protected OkHttpClient httpClient;
  protected String serverUrl;

  protected CustomHook customHook;

  public BaseService(OkHttpClient httpClient, String serverUrl) {
    this.httpClient = httpClient;
    this.serverUrl = serverUrl;

    this.customHook = new CustomHook();
  }

  public void setBaseUrl(String serverUrl) {
    this.serverUrl = serverUrl;
  }

  protected Response execute(Request request) throws ApiException {
    Response response;
    try {
      io.github.mlanlazc.hooks.model.Request hookRequest = toHookRequest(request);
      this.customHook.beforeRequest(hookRequest);
      request = toOkHttpRequest(hookRequest);

      response = this.httpClient.newCall(request).execute();

      this.customHook.afterResponse(hookRequest, toHookResponse(response));
    } catch (IOException e) {
      ApiException apiException = new ApiException(e.getMessage());

      this.customHook.onError(toHookRequest(request), apiException);

      throw apiException;
    }
    if (response.isSuccessful()) {
      return response;
    } else {
      ApiException apiException = new ApiException(response.code());

      this.customHook.onError(toHookRequest(request), apiException);

      throw apiException;
    }
  }
}
